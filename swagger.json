{
  "openapi": "3.0.0",
  "paths": {
    "/commands": {
      "get": {
        "operationId": "CommandController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Command"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Command"
        ]
      },
      "post": {
        "operationId": "CommandController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommandDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Command"
                }
              }
            }
          }
        },
        "tags": [
          "Command"
        ]
      }
    },
    "/commands/{id}": {
      "get": {
        "operationId": "CommandController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Command"
                }
              }
            }
          }
        },
        "tags": [
          "Command"
        ]
      },
      "put": {
        "operationId": "CommandController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Command"
                }
              }
            }
          }
        },
        "tags": [
          "Command"
        ]
      },
      "delete": {
        "operationId": "CommandController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Command"
        ]
      }
    },
    "/task/{id}/run": {
      "get": {
        "operationId": "TaskRunController_getAllRunsForTask",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskRun"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "TaskRun"
        ]
      }
    },
    "/task/run": {
      "get": {
        "operationId": "TaskRunController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskRun"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "TaskRun"
        ]
      }
    },
    "/task/run/favorites": {
      "get": {
        "operationId": "TaskRunController_findFavorited",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskRun"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "TaskRun"
        ]
      }
    },
    "/task/run/{id}/execute": {
      "post": {
        "operationId": "TaskRunController_execute",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteTaskRunDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "TaskRun"
        ]
      }
    },
    "/task/run/{id}/favorite": {
      "patch": {
        "operationId": "TaskRunController_toggleFavorite",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskRun"
                }
              }
            }
          }
        },
        "tags": [
          "TaskRun"
        ]
      }
    },
    "/tasks": {
      "post": {
        "operationId": "TaskController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "get": {
        "operationId": "TaskController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/{id}": {
      "get": {
        "operationId": "TaskController_findById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "put": {
        "operationId": "TaskController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTaskDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          }
        },
        "tags": [
          "tasks"
        ]
      },
      "delete": {
        "operationId": "TaskController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/{id}/execute": {
      "post": {
        "operationId": "TaskController_execute",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/tasks/{id}/queue": {
      "post": {
        "operationId": "TaskController_queue",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueueTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "tasks"
        ]
      }
    },
    "/task-result/{taskResultId}": {
      "get": {
        "operationId": "TaskResultController_getResultsByTaskResultId",
        "parameters": [
          {
            "name": "taskResultId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResult"
                }
              }
            }
          }
        },
        "summary": "Get task results by task result ID",
        "tags": [
          "TaskResult"
        ]
      }
    },
    "/activity/task-result": {
      "get": {
        "operationId": "ActivityController_getAllActiveTaskResults",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskResult"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Activity"
        ]
      }
    },
    "/activity/queue": {
      "get": {
        "operationId": "ActivityController_getAllQueued",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskResult"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Activity"
        ]
      }
    },
    "/activity/task-result/{taskResultId}": {
      "get": {
        "operationId": "ActivityController_getCurrentTaskResults",
        "parameters": [
          {
            "name": "taskResultId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "Activity"
        ]
      },
      "delete": {
        "operationId": "ActivityController_stopTask",
        "parameters": [
          {
            "name": "taskResultId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Activity"
        ]
      }
    },
    "/activity/queue-events": {
      "get": {
        "operationId": "ActivityController_trackQueue",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "Activity"
        ]
      }
    },
    "/arguments": {
      "post": {
        "operationId": "ArgumentController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateArgumentDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Argument"
                }
              }
            }
          }
        },
        "tags": [
          "Argument"
        ]
      }
    },
    "/arguments/{id}": {
      "put": {
        "operationId": "ArgumentController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateArgumentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Argument"
                }
              }
            }
          }
        },
        "tags": [
          "Argument"
        ]
      },
      "delete": {
        "operationId": "ArgumentController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Argument"
        ]
      }
    },
    "/task/{name}/queue": {
      "post": {
        "operationId": "CliController_runQueueByName",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Cli"
        ]
      }
    },
    "/task/{name}/execute": {
      "post": {
        "operationId": "CliController_executeByName",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExecuteTaskDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Cli"
        ]
      }
    },
    "/task-result/output/{taskResultId}": {
      "get": {
        "operationId": "TaskResultOutputController_findAll",
        "parameters": [
          {
            "name": "taskResultId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaskResultOutput"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "TaskResultOutput"
        ]
      }
    }
  },
  "info": {
    "title": "Krabs API",
    "description": "The Krabs API",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "krabs",
      "description": ""
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3042"
    }
  ],
  "components": {
    "schemas": {
      "TaskRun": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "results": {
            "$ref": "#/components/schemas/TaskResult"
          },
          "commandArguments": {
            "type": "object"
          },
          "favorited": {
            "type": "boolean"
          },
          "usageCount": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "task",
          "results",
          "commandArguments",
          "favorited",
          "usageCount",
          "createdAt",
          "updatedAt"
        ]
      },
      "TaskResultOutput": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "taskResult": {
            "$ref": "#/components/schemas/TaskResult"
          },
          "line": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "taskResult",
          "line",
          "createdAt"
        ]
      },
      "TaskResult": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "taskRun": {
            "$ref": "#/components/schemas/TaskRun"
          },
          "output": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskResultOutput"
            }
          },
          "status": {
            "enum": [
              "IN_PROGRESS",
              "QUEUED",
              "SUCCESS",
              "FAILED",
              "STOPPED"
            ],
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "task",
          "status",
          "createdAt",
          "updatedAt"
        ]
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "taskCommands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskCommand"
            }
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskResult"
            }
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "taskCommands",
          "results",
          "createdAt",
          "updatedAt"
        ]
      },
      "TaskCommand": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "task": {
            "$ref": "#/components/schemas/Task"
          },
          "command": {
            "$ref": "#/components/schemas/Command"
          },
          "executionOrder": {
            "type": "number"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "id",
          "task",
          "command",
          "executionOrder",
          "createdAt",
          "updatedAt"
        ]
      },
      "Command": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "wd": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "command": {
            "type": "string"
          },
          "arguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Argument"
            }
          },
          "format": {
            "type": "string"
          },
          "optional": {
            "type": "boolean"
          },
          "taskCommands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TaskCommand"
            }
          }
        },
        "required": [
          "id",
          "wd",
          "name",
          "command",
          "arguments",
          "format",
          "optional",
          "taskCommands"
        ]
      },
      "Argument": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "required": {
            "type": "boolean"
          },
          "commands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Command"
            }
          }
        },
        "required": [
          "id",
          "name",
          "required",
          "commands"
        ]
      },
      "CreateArgumentDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the argument."
          },
          "required": {
            "type": "boolean",
            "description": "Indicates if the argument is required."
          },
          "commandId": {
            "type": "string",
            "description": "The ID of the command this argument belongs to (optional)."
          }
        },
        "required": [
          "name",
          "required"
        ]
      },
      "CreateCommandDto": {
        "type": "object",
        "properties": {
          "wd": {
            "type": "string",
            "description": "The working directory for the command.\n@type {string}"
          },
          "name": {
            "type": "string",
            "description": "The command to be executed, for now including arguments\n@type {string}"
          },
          "command": {
            "type": "string",
            "description": "The command to be executed, for now including arguments\n@type {string}"
          },
          "optional": {
            "type": "boolean",
            "description": "Optional flag to indicate if the command is optional, if so it will not block the task on fail.\n@type {boolean}\n@default false"
          },
          "format": {
            "type": "string",
            "description": "The format for the command arguments.\nThis is used to format the arguments when they are passed to the command.\n@type {string}\n@default '--{{name}}={{value}}'",
            "default": "--{{name}}={{value}}"
          },
          "arguments": {
            "description": "The list of arguments for the command.\n@type {CreateArgumentDto[]}",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateArgumentDto"
            }
          },
          "taskId": {
            "type": "string",
            "description": "Optional task ID to associate the command with a specific task.\n@type {string}"
          }
        },
        "required": [
          "wd",
          "name",
          "command",
          "format"
        ]
      },
      "UpdateCommandDto": {
        "type": "object",
        "properties": {
          "arguments": {
            "description": "The list of arguments for the command.\n@type {Argument[]}",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Argument"
            }
          },
          "wd": {
            "type": "string",
            "description": "The working directory for the command.\n@type {string}"
          },
          "name": {
            "type": "string",
            "description": "The command to be executed, for now including arguments\n@type {string}"
          },
          "command": {
            "type": "string",
            "description": "The command to be executed, for now including arguments\n@type {string}"
          },
          "optional": {
            "type": "boolean",
            "description": "Optional flag to indicate if the command is optional, if so it will not block the task on fail.\n@type {boolean}\n@default false"
          },
          "format": {
            "type": "string",
            "description": "The format for the command arguments.\nThis is used to format the arguments when they are passed to the command.\n@type {string}\n@default '--{{name}}={{value}}'",
            "default": "--{{name}}={{value}}"
          }
        }
      },
      "ExecuteTaskRunDto": {
        "type": "object",
        "properties": {
          "queued": {
            "type": "boolean",
            "description": "Whether the task should be queued or executed immediately.\n@type {boolean}\n@default false",
            "default": false
          }
        }
      },
      "ExistingOrNewCommand": {
        "type": "object",
        "properties": {
          "wd": {
            "type": "string",
            "description": "The working directory for the command.\n@type {string}"
          },
          "name": {
            "type": "string",
            "description": "The command to be executed, for now including arguments\n@type {string}"
          },
          "command": {
            "type": "string",
            "description": "The command to be executed, for now including arguments\n@type {string}"
          },
          "optional": {
            "type": "boolean",
            "description": "Optional flag to indicate if the command is optional, if so it will not block the task on fail.\n@type {boolean}\n@default false"
          },
          "format": {
            "type": "string",
            "description": "The format for the command arguments.\nThis is used to format the arguments when they are passed to the command.\n@type {string}\n@default '--{{name}}={{value}}'",
            "default": "--{{name}}={{value}}"
          },
          "arguments": {
            "description": "The list of arguments for the command.\n@type {CreateArgumentDto[]}",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreateArgumentDto"
            }
          },
          "taskId": {
            "type": "string",
            "description": "Optional task ID to associate the command with a specific task.\n@type {string}"
          },
          "id": {
            "type": "string",
            "description": "If provided, will not create a new command"
          }
        },
        "required": [
          "wd",
          "name",
          "command",
          "format"
        ]
      },
      "CreateTaskDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the task.\n@type {string}"
          },
          "description": {
            "type": "string",
            "description": "An optional description of the task.\n@type {string}"
          },
          "commands": {
            "description": "The list of commands associated with the task\n@type {CommandDto[]}",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExistingOrNewCommand"
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "UpdateTaskDto": {
        "type": "object",
        "properties": {
          "commands": {
            "description": "The list of commands associated with the task\n@type {CommandDto[]}",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Command"
            }
          },
          "name": {
            "type": "string",
            "description": "The name of the task.\n@type {string}"
          },
          "description": {
            "type": "string",
            "description": "An optional description of the task.\n@type {string}"
          }
        }
      },
      "ExecuteTaskDto": {
        "type": "object",
        "properties": {
          "commandArguments": {
            "type": "object",
            "description": "Arguments per named command (per named argument)"
          }
        },
        "required": [
          "commandArguments"
        ]
      },
      "QueueTaskDto": {
        "type": "object",
        "properties": {
          "commandArguments": {
            "type": "object",
            "description": "Arguments per named command (per named argument)"
          },
          "priority": {
            "type": "number",
            "description": "Arguments per named command (per named argument)"
          }
        },
        "required": [
          "commandArguments"
        ]
      },
      "UpdateArgumentDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the argument."
          },
          "required": {
            "type": "boolean",
            "description": "Indicates if the argument is required."
          }
        }
      }
    }
  }
}