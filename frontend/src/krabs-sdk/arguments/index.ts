/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createArgumentFromDiscriminatorValue, serializeArgument, serializeCreateArgumentDto, type Argument, type CreateArgumentDto } from '../models/index.js';
// @ts-ignore
import { ArgumentsItemRequestBuilderRequestsMetadata, type ArgumentsItemRequestBuilder } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /arguments
 */
export interface ArgumentsRequestBuilder extends BaseRequestBuilder<ArgumentsRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.arguments.item collection
     * @param id Unique identifier of the item
     * @returns {ArgumentsItemRequestBuilder}
     */
     byId(id: number) : ArgumentsItemRequestBuilder;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Argument>}
     */
     post(body: CreateArgumentDto, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Argument | undefined>;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: CreateArgumentDto, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const ArgumentsRequestBuilderUriTemplate = "{+baseurl}/arguments";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const ArgumentsRequestBuilderNavigationMetadata: Record<Exclude<keyof ArgumentsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byId: {
        requestsMetadata: ArgumentsItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["id"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const ArgumentsRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: ArgumentsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createArgumentFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeCreateArgumentDto,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
