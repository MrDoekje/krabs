/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type AdditionalDataHolder, type BaseRequestBuilder, type Parsable, type ParsableFactory, type ParseNode, type RequestConfiguration, type RequestInformation, type RequestsMetadata, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {WithTaskResultGetResponse}
 */
// @ts-ignore
export function createWithTaskResultGetResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoWithTaskResultGetResponse;
}
/**
 * The deserialization information for the current model
 * @param WithTaskResultGetResponse The instance to deserialize into.
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoWithTaskResultGetResponse(withTaskResultGetResponse: Partial<WithTaskResultGetResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * Serializes information the current object
 * @param isSerializingDerivedType A boolean indicating whether the serialization is for a derived type.
 * @param WithTaskResultGetResponse The instance to serialize from.
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeWithTaskResultGetResponse(writer: SerializationWriter, withTaskResultGetResponse: Partial<WithTaskResultGetResponse> | undefined | null = {}, isSerializingDerivedType: boolean = false) : void {
    if (!withTaskResultGetResponse || isSerializingDerivedType) { return; }
    writer.writeAdditionalData(withTaskResultGetResponse.additionalData);
}
export interface WithTaskResultGetResponse extends AdditionalDataHolder, Parsable {
}
/**
 * Builds and executes requests for operations under /activity/task-result/{taskResultId}
 */
export interface WithTaskResultItemRequestBuilder extends BaseRequestBuilder<WithTaskResultItemRequestBuilder> {
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ArrayBuffer>}
     */
     delete(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<ArrayBuffer | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<WithTaskResultGetResponse>}
     */
     get(requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<WithTaskResultGetResponse | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toDeleteRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const WithTaskResultItemRequestBuilderUriTemplate = "{+baseurl}/activity/task-result/{taskResultId}";
/**
 * Metadata for all the requests in the request builder.
 */
export const WithTaskResultItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    delete: {
        uriTemplate: WithTaskResultItemRequestBuilderUriTemplate,
        adapterMethodName: "sendPrimitive",
        responseBodyFactory:  "ArrayBuffer",
    },
    get: {
        uriTemplate: WithTaskResultItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createWithTaskResultGetResponseFromDiscriminatorValue,
    },
};
/* tslint:enable */
/* eslint-enable */
